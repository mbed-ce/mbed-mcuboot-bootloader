{
    "config": {
        "serial-bootloader-enable": {
            "help": "Build bootloader with serial update support",
            "value": 0
        },
        "secondary-slot-in-flash": {
            "help": "If enabled, store the secondary slot in the application flash immediately after the primary slot.",
            "value": false
        },
        "secondary-slot-flash-start-addr": {
            "help": "If secondary-slot-in-flash is enabled, this sets the start address of the secondary slot.",
            "value": null
        }
    },
    "target_overrides": {
        "*": {
            "platform.stdio-baud-rate": 115200,
            "target.c_lib": "small",
            "target.application-profile": "bare-metal",
            "mcuboot.log-enable": true,
            "mcuboot.log-level": "MCUBOOT_LOG_LEVEL_INFO", // Change INFO to DEBUG for debug prints
            "mbed-trace.enable": true,
            "mbed-trace.max-level": "TRACE_LEVEL_DEBUG",
            "mbed-trace.fea-ipv6": false,

            // Uncomment to enable encryption of the image
            // "mcuboot.encrypt-rsa": true
        },
        // "NRF52840_DK": {
        //     "target.features_remove": ["CRYPTOCELL310"],
        //     "target.macros_remove": ["MBEDTLS_CONFIG_HW_SUPPORT"],
        //     "mcuboot.primary-slot-address": "0x20000",
        //     "mcuboot.slot-size": "0xC0000",
        //     "mcuboot.scratch-address": "0xE0000",
        //     "mcuboot.scratch-size": "0x20000",
        //     "mcuboot.max-img-sectors": "0x180",
        //     "mcuboot.read-granularity": 4,
        //     "qspif.QSPI_MIN_PROG_SIZE": 4
        // },
        // "EP_AGORA": {
        //     "target.features_remove": ["CRYPTOCELL310"],
        //     "target.macros_remove": ["MBEDTLS_CONFIG_HW_SUPPORT"],
        //     "mcuboot.primary-slot-address": "0x20000",
        //     "mcuboot.slot-size": "0xC0000",
        //     "mcuboot.scratch-address": "0xE0000",
        //     "mcuboot.scratch-size": "0x20000",
        //     "mcuboot.max-img-sectors": "0x180",
        //     "mcuboot.read-granularity": 4,
        //     "qspif.QSPI_MIN_PROG_SIZE": 4
        // },
        // "DISCO_L475VG_IOT01A": {
        //     "mcuboot.primary-slot-address": "0x8020000",
        //     "mcuboot.slot-size": "0xC0000",
        //     "mcuboot.scratch-address": "0x80E0000",
        //     "mcuboot.scratch-size": "0x20000",
        //     "mcuboot.max-img-sectors": "0x180",
        //     "mcuboot.read-granularity": 1,
        //     "qspif.QSPI_MIN_PROG_SIZE": 1
        // },
        "DISCO_F746NG": {
            "target.restrict_size": "0x18000",
            "mcuboot.primary-slot-address": "0x8018000",
            "mcuboot.slot-size": "0xA8000",
            "mcuboot.scratch-address": "0x80C0000",
            "mcuboot.scratch-size": "0x40000",
            "mcuboot.max-img-sectors": "0x180",
            "mcuboot.read-granularity": 1,
            "qspif.QSPI_MIN_PROG_SIZE": 1
        },
        "K64F": {
            // Configure bootloader to live in the first sector of flash
            "target.memory_bank_config": {
                "IROM1": {
                    "size": 0x20000
                }
            },

            // On K64F we store the secondary slot in external memory, not internal.
            // So, the primary slot can take up most of flash.
            "mcuboot.primary-slot-address": "0x20000",
            "mcuboot.slot-size": "0xC0000",

            // Store the scratch space at the end of flash
            "mcuboot.scratch-address": "0xE0000",
            "mcuboot.scratch-size": "0x20000",

            "mcuboot.read-granularity": 512, // External SD card used as block device, this is its read size.

            "mcuboot.max-img-sectors": "1536" // External SD card has smaller sector size, so divide slot size by read granularity
        },

        "MIMXRT1060_EVK": {
            "target.memory_bank_config": {
                "EXT_FLASH": {
                    "size": 0x20000
                }
            },

            // Primary slot is 3MiB and begins right after the bootloader
            "mcuboot.primary-slot-address": "0x60020000",
            "mcuboot.slot-size": "0x300000",

            // Use flash for secondary slot as well
            "secondary-slot-in-flash": true,
            "secondary-slot-flash-start-addr": "0x60320000",

            // Store the scratch space at the end of flash
            "mcuboot.scratch-address": "0x60620000",
            "mcuboot.scratch-size": "0x20000",

            "mcuboot.read-granularity": 1, // Flash is byte addressable

            "mcuboot.max-img-sectors": 768, // Maximum flash sectors per slot. 3MiB/4kiB = 768.
            "mcuboot.flash-block-size": 256
        },

        "MCU_STM32H743xI": {
            // Configure bootloader to live in the first sector of flash
            "target.memory_bank_config": {
                "IROM1": {
                    "size": 0x20000
                }
            },

            // Since STM32H743 boards have no external block device, keep everything in the MCU flash.
            "app.secondary-slot-in-flash": true,
            "app.secondary-slot-flash-start-addr": "0x08100000",

            // Slot size can be as big as 896k, since we need to reserve the first flash sector for the bootloader
            // and the last flash sector for scratch space
            "mcuboot.primary-slot-address": "0x08020000",
            "mcuboot.max-img-sectors": "7", // 7 flash sectors per slot
            "mcuboot.slot-size": "0xE0000",
            "mcuboot.flash-block-size": 32, // Flash program size is 32

            // STM32H7 flash sector size is 128k, so we need to make the scratch region at least that big
            "mcuboot.scratch-address": "0x081E0000",
            "mcuboot.scratch-size": "0x20000"

        },

        // Config by @zhiyong-ft for NUCLEO_F767ZI.
        // Assumes that an external SPI flash is connected
        "NUCLEO_F767ZI": {
            "target.components_add": ["SPIF"],
            "mcuboot.primary-slot-address": "0x8010000",
            "mcuboot.slot-size": "0xB0000",
            "mcuboot.scratch-address": "0x80C0000",
            "mcuboot.scratch-size": "0x40000",
            "mcuboot.max-img-sectors": "0x180",
            "mcuboot.read-granularity": 1
        },

        "NUCLEO_L452RE_P": {
            // Configure bootloader to live in the first 128k of flash
            "target.memory_bank_config": {
                "IROM1": {
                    "size": 0x20000
                }
            },

            // Sector size is 2k, make the scratch region use the last 8k of flash so it uses 4 sectors
            "mcuboot.scratch-address": 0x0807E000,
            "mcuboot.scratch-size": 0x2000,

            // Primary and secondary slot need to fit in the remaining 376k of flash (512k total - 128k - 8k)
            "mcuboot.slot-size": 0x2F000, // 188kiB

            // Primary slot starts right after the bootloader
            "mcuboot.primary-slot-address": 0x08020000,

            "mcuboot.max-img-sectors": 94, // 94 flash sectors per slot
            "mcuboot.flash-block-size": 8, // Flash program size is 8

            // Since STM32 nucleo boards have no external block device, keep everything in the MCU flash.
            "app.secondary-slot-in-flash": true,
            "app.secondary-slot-flash-start-addr": 0x0804F000 // primary-slot-address + slot-size
        }
    }
}
